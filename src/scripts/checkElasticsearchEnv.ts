import 'dotenv/config';

console.log('üîç Verificando vari√°veis de ambiente do Elasticsearch...\n');

const envVars = {
  ELASTIC_URL: process.env.ELASTIC_URL,
  ELASTIC_INTERNAL_URL: process.env.ELASTIC_INTERNAL_URL,
  ELASTIC_USERNAME: process.env.ELASTIC_USERNAME,
  ELASTIC_PASSWORD: process.env.ELASTIC_PASSWORD,
  NODE_ENV: process.env.NODE_ENV
};

console.log('üìã Vari√°veis de ambiente:');
Object.entries(envVars).forEach(([key, value]) => {
  if (key.includes('PASSWORD')) {
    console.log(`   ${key}: ${value ? '‚úÖ Configurado' : '‚ùå N√£o configurado'}`);
  } else {
    console.log(`   ${key}: ${value || '‚ùå N√£o configurado'}`);
  }
});

console.log('\nüîê Status da autentica√ß√£o:');
const hasUsername = !!envVars.ELASTIC_USERNAME;
const hasPassword = !!envVars.ELASTIC_PASSWORD;
console.log(`   Username configurado: ${hasUsername ? '‚úÖ' : '‚ùå'}`);
console.log(`   Password configurado: ${hasPassword ? '‚úÖ' : '‚ùå'}`);
console.log(`   Autentica√ß√£o habilitada: ${hasUsername && hasPassword ? '‚úÖ' : '‚ùå'}`);

console.log('\nüåê URLs configuradas:');
console.log(`   URL p√∫blica: ${envVars.ELASTIC_URL || '‚ùå N√£o configurado'}`);
console.log(`   URL interna: ${envVars.ELASTIC_INTERNAL_URL || '‚ùå N√£o configurado'}`);

if (!hasUsername || !hasPassword) {
  console.log('\n‚ö†Ô∏è  PROBLEMA IDENTIFICADO:');
  console.log('   As credenciais do Elasticsearch n√£o est√£o configuradas corretamente.');
  console.log('   Isso est√° causando autentica√ß√£o como usu√°rio an√¥nimo sem permiss√µes.');
  console.log('\nüí° SOLU√á√ïES:');
  console.log('   1. Configure ELASTIC_USERNAME e ELASTIC_PASSWORD no Railway');
  console.log('   2. Ou crie um arquivo .env local com essas vari√°veis');
  console.log('   3. Ou configure as vari√°veis de ambiente no sistema');
}
