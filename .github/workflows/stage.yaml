name: Deploy to VPS with Docker

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Ambiente
        options:
          - production
          - staging
  push:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add VPS to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo ✅ SSH conectado com sucesso!"

      - name: Deploy to VPS with Docker
        run: |
          REPO_NAME=$(basename ${{ github.repository }})
          GIT_REPO="git@github.com:${{ github.repository }}"

          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << EOF
            set -e

            DEPLOY_DIR=/var/www/$REPO_NAME

            echo "📁 Checking repository..."
            if [ ! -d "\$DEPLOY_DIR" ]; then
              sudo mkdir -p \$DEPLOY_DIR
              cd \$DEPLOY_DIR
              sudo GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git clone $GIT_REPO .
            else
              cd \$DEPLOY_DIR
              sudo git remote set-url origin $GIT_REPO
              sudo GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no" git pull

            fi

            echo "🐳 Deploying with Docker Compose..."
            sudo docker-compose down
            sudo docker-compose up --build -d

            echo "✅ Deployment completed!"
          EOF
